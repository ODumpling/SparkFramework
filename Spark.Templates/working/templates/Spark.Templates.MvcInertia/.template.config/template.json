{
  "$schema": "http://json.schemastore.org/template",
  "author": "Weston Walker",
  "classifications": ["Mvc", "Web", "Spark", "js"],
  "identity": "Spark.js",
  "name": "Spark.NET Web App (js)",
  "description": "A project template for creating a Spark web app with ASP.NET MVC. Provides a starting point for MVC apps with database and user auth out of the box.",
  "shortName": "sparkjs",
  "sourceName": "Spark.Templates.Mvc",
  "tags": {
    "language": "C#",
    "type": "project"
  },
  "symbols": {
    "ClientFramework": {
      "type": "parameter",
      "datatype": "choice",
      "choices": [
        {
          "choice": "Vue",
          "description": "Use Vue"
        },
        {
          "choice": "React",
          "description": "Use React"
        }
      ],
      "defaultValue": "Vue",
      "description": "The type of client framework to use"
    },

    "Css": {
      "type": "parameter",
      "datatype": "choice",
      "defaultValue": "Tailwind",
      "choices": [
        {
          "choice": "Tailwind",
          "description": "Tailwind CSS"
        },
        {
          "choice": "Bootstrap",
          "description": "Bootstrap CSS"
        },
        {
          "choice": "Pico",
          "description": "Pico"
        }
      ]
    },
    "UseVue": {
      "type": "computed",
      "value": "(ClientFramework == \"Vue\")"
    },
    "UseReact": {
      "type": "computed",
      "value": "(ClientFramework == \"React\")"
    },
    "IsTailwind": {
      "type": "computed",
      "value": "(Css == \"Tailwind\")"
    },
    "IsBootstrap": {
      "type": "computed",
      "value": "(Css == \"Bootstrap\")"
    },
    "IsPico": {
      "type": "computed",
      "value": "(Css == \"Pico\")"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "exclude": [".vs/**"]
        }
      ]
    }
  ],
  "SpecialCustomOperations": {
    "**/*.razor": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": ["//#if"],
            "else": ["//#else"],
            "elseif": ["//#elseif"],
            "endif": ["//#endif"],
            "trim": true,
            "wholeLine": true,
            "evaluator": "C++"
          }
        }
      ]
    },
    "**/*.html": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": ["//#if"],
            "else": ["//#else"],
            "elseif": ["//#elseif"],
            "endif": ["//#endif"],
            "trim": true,
            "wholeLine": true,
            "evaluator": "C++"
          }
        }
      ]
    },
    "**/*.cshtml": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": ["//#if"],
            "else": ["//#else"],
            "elseif": ["//#elseif"],
            "endif": ["//#endif"],
            "trim": true,
            "wholeLine": true,
            "evaluator": "C++"
          }
        }
      ]
    },
    "**/*.css": {
      "operations": [
        {
          "type": "conditional",
          "configuration": {
            "if": ["//#if"],
            "else": ["//#else"],
            "elseif": ["//#elseif"],
            "endif": ["//#endif"],
            "trim": true,
            "wholeLine": true,
            "evaluator": "C++"
          }
        }
      ]
    }
  }
}
